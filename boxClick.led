Box-Click
Nelson Rushton, Texas Tech CS
July 15 2014

This LED program defines the box-click game in LED. You can move the 
circlef rom one box to another by clicking  inside the boxes.
The only purpose of the "game" is to demo the Easel game engine.

======================================================================

The game has two states, 1 and 2. The game begins in state 1

/-----------
 init := 1 
------------/

The corners of the rectangular background are as follows.

/-------------------------
 topLeft     := (200,300)
 topRight    := (400,300)
 bottomLeft  := (200,200)
 bottomRight := (400,200)
--------------------------/

The sides of the rectangular background are as follows.

/-----------------------------------
 top    := (topLeft,topRight)
 bottom := (bottomLeft,bottomRight)
 left   := (bottomLeft,topLeft)
 right  := (bottomRight,topRight)
-------------------------------------/

The background rectangle is bisected by a vertical line segment
called the *divider*.

/----------------------------------
 divider := ((300,200),(300,300))
----------------------------------/

The background consists of a text ("Box Click!" in the upper left 
corner of the game window) and five line segments: top, bottom,
left side, right side, and the divider.

/-------------------------------------------------------------
 titleString := <66, 111, 120, 32, 67, 108, 105, 99, 107, 33>
 title       := ((100,450),20,titleString)
 background  := {top,bottom,left,right,divider,title}
---------------------------------------------------------------/

The circle is in the left square if Gamma is 1, and in the 
right square if Gamma is 2.

/--------------------------------
 leftCirc  := ((250,250),40)
 rightCirc := ((350,250),40)

 circ := 
    leftCirc  if Gamma=1;
    rightCirc if Gamma=2
----------------------------------/

The display consists of the background and the circle.

/------------------------------------
 display := background U {circ}
-------------------------------------/

The x and y coordinates of a point are its 1st and 2nd coordinates,
respectively.

/------------------
 xCoord(p) := p[1]
 yCoord(p) := p[2]
-------------------/

The new state will be 1 if the left box is clicked, and 2
if the right box is clicked. Otherwise it will remain unchanged.

/-----------------------------------------------
newState:=
   1 if leftClicked;
   2 if rightClicked;
   Gamma otherwise

 leftClicked iff 
   xCoord(click)>200 & xCoord(click) <300  & 
   yCoord(click)>200 & yCoord(click) <300

 rightClicked iff
   xCoord(click)>300 & xCoord(click)<400  & 
   yCoord(click)>200 & yCoord(click)<300

-----------------------------------------------/




